using System.Collections;
using System.Drawing.Text;

namespace TicTacToe
{
    public partial class Form1 : Form
    {
        Random rand = new Random();

        int location = 0;
        string[] cpuChoice = {"topLeftBox", "topMiddleBox", "topRightBox",
                      "middleLeftBox", "middleBox", "middleRightBox",
                      "bottomLeftBox", "bottomMiddleBox", "bottomRightBox"};
        string randChoice = null;
        bool playerTurn = true;
        bool cpuTurn = false;
        int rounds = 0;

        List<Filled> places = new List<Filled>();

        public Form1()
        {
            InitializeComponent();

            foreach (string name in cpuChoice)
            {
                places.Add(new Filled(name));
            }
            
        }

        private void CpuTurn()
        {
            rounds++;

            if (rounds < 5)
            {
                if (!playerTurn)
                {
                    bool found = false;
                    while (!found)
                    {
                        location = rand.Next(0, 9);
                        randChoice = cpuChoice[location];


                        foreach (var place in places)
                        {
                            if (place.Name == randChoice && !place.filled)
                            {
                                CpuFill();
                                place.filled = true;
                                found = true;
                                break;
                            }
                        }
                        playerTurn = true;
                        cpuTurn = false;
                    }

                }
            }
            checkGame();
        }

        private void CpuFill()
        {
            switch (randChoice)
            {
                case "topLeftBox":
                    topLeftBox.Image = Properties.Resources.O;
                    topLeftBox.Tag = "O";
                    break;
                case "topMiddleBox":
                    topMiddleBox.Image = Properties.Resources.O;
                    topMiddleBox.Tag = "O";
                    break;
                case "topRightBox":
                    topRightBox.Image = Properties.Resources.O;
                    topRightBox.Tag = "O";
                    break;
                case "middleLeftBox":
                    middleLeftBox.Image = Properties.Resources.O;
                    middleLeftBox.Tag = "O";
                    break;
                case "middleBox":
                    middleBox.Image = Properties.Resources.O;
                    middleBox.Tag = "O";
                    break;
                case "middleRightBox":
                    middleRightBox.Image = Properties.Resources.O;
                    middleRightBox.Tag = "O";
                    break;
                case "bottomLeftBox":
                    bottomLeftBox.Image = Properties.Resources.O;
                    bottomLeftBox.Tag = "O";
                    break;
                case "bottomMiddleBox":
                    bottomMiddleBox.Image = Properties.Resources.O;
                    bottomMiddleBox.Tag = "O";
                    break;
                case "bottomRightBox":
                    bottomRightBox.Image = Properties.Resources.O;
                    bottomRightBox.Tag = "O";
                    break;
            }
        }



        private void button4_Click(object sender, EventArgs e)
        {

        }

        private void button1_Click(object sender, EventArgs e)
        {

        }

        private void button2_Click(object sender, EventArgs e)
        {

        }

        private void button3_Click(object sender, EventArgs e)
        {

        }

        private void pictureBox3_Click(object sender, EventArgs e)
        {
            foreach (var place in places)
            {
                if (place.Name == "topMiddleBox" && !place.filled)
                {
                    topMiddleBox.Image = Properties.Resources.X_Logo;
                    topMiddleBox.Tag = "X";

                    place.filled = true;

                    playerTurn = false;
                    cpuTurn = true;

                    checkGame();

                    if (!playerTurn)
                    {
                        cpuTurn = true;
                        CpuTurn();
                    }

                    break;
                }
            }
            checkGame();
        }

        private void pictureBox2_Click(object sender, EventArgs e)
        {

        }

        private void pictureBox2_Click_1(object sender, EventArgs e)
        {

        }

        private void topLeftBox_Click(object sender, EventArgs e)
        {
            foreach (var place in places)
            {
                if (place.Name == "topLeftBox" && !place.filled)
                {
                    topLeftBox.Image = Properties.Resources.X_Logo;
                    topLeftBox.Tag = "X";

                    place.filled = true;
                    playerTurn = false;

                    checkGame();

                    if (!playerTurn)  
                    {
                        cpuTurn = true;
                        CpuTurn();
                    }

                    break;
                }
            }
        }

        private void topRightBox_Click(object sender, EventArgs e)
        {
            foreach (var place in places)
            {
                if (place.Name == "topRightBox" && !place.filled)
                {
                    topRightBox.Image = Properties.Resources.X_Logo;
                    topRightBox.Tag = "X";

                    place.filled = true;

                    playerTurn = false;
                    cpuTurn = true;

                    checkGame();

                    if (!playerTurn)
                    {
                        cpuTurn = true;
                        CpuTurn();
                    }

                    break;
                }
            }
            checkGame();
        }

        private void middleLeftBox_Click(object sender, EventArgs e)
        {
            foreach (var place in places)
            {
                if (place.Name == "middleLeftBox" && !place.filled)
                {
                    middleLeftBox.Image = Properties.Resources.X_Logo;
                    middleLeftBox.Tag = "X";

                    place.filled = true;

                    playerTurn = false;
                    cpuTurn = true;

                    checkGame();

                    if (!playerTurn)
                    {
                        cpuTurn = true;
                        CpuTurn();
                    }

                    break;
                }
            }
            checkGame();
        }

        private void middleBox_Click(object sender, EventArgs e)
        {
            foreach (var place in places)
            {
                if (place.Name == "middleBox" && !place.filled)
                {
                    middleBox.Image = Properties.Resources.X_Logo;
                    middleBox.Tag = "X"; 
                    place.filled = true;

                    playerTurn = false;
                    cpuTurn = true;

                    checkGame();

                    if (!playerTurn)
                    {
                        cpuTurn = true;
                        CpuTurn();
                    }

                    break;
                }
            }
            checkGame();
        }

        private void middleRightBox_Click(object sender, EventArgs e)
        {
            foreach (var place in places)
            {
                if (place.Name == "middleRightBox" && !place.filled)
                {
                    middleRightBox.Image = Properties.Resources.X_Logo;
                    middleRightBox.Tag = "X";
                    place.filled = true;

                    playerTurn = false;
                    cpuTurn = true;

                    checkGame();

                    if (!playerTurn)
                    {
                        cpuTurn = true;
                        CpuTurn();
                    }

                    break;
                }
            }
            checkGame();
        }

        private void pictureBox1_Click(object sender, EventArgs e)
        {

        }

        private void bottomLeftBox_Click(object sender, EventArgs e)
        {
            foreach (var place in places)
            {
                if (place.Name == "bottomLeftBox" && !place.filled)
                {
                    bottomLeftBox.Image = Properties.Resources.X_Logo;
                    bottomLeftBox.Tag = "X";

                    place.filled = true;

                    playerTurn = false;
                    cpuTurn = true;

                    checkGame();

                    if (!playerTurn)
                    {
                        cpuTurn = true;
                        CpuTurn();
                    }

                    break;
                }
            }
            checkGame();
        }

        private void bottomMiddleBox_Click(object sender, EventArgs e)
        {
            foreach (var place in places)
            {
                if (place.Name == "bottomMiddleBox" && !place.filled)
                {
                    bottomMiddleBox.Image = Properties.Resources.X_Logo;
                    bottomMiddleBox.Tag = "X";

                    place.filled = true;

                    playerTurn = false;
                    cpuTurn = true;

                    checkGame();

                    if (!playerTurn)
                    {
                        cpuTurn = true;
                        CpuTurn();
                    }

                    break;
                }
            }
            checkGame();
        }

        private void bottomRightBox_Click(object sender, EventArgs e)
        {
            foreach (var place in places)
            {
                if (place.Name == "bottomRightBox" && !place.filled)
                {
                    bottomRightBox.Image = Properties.Resources.X_Logo;
                    bottomRightBox.Tag = "X";

                    place.filled = true;

                    playerTurn = false;
                    cpuTurn = true;

                    checkGame();

                    if (!playerTurn)
                    {
                        cpuTurn = true;
                        CpuTurn();
                    }

                    break;
                }
            }
            checkGame();
        }

        private void checkGame()
        {
            bool IsWinningMove(PictureBox box1, PictureBox box2, PictureBox box3, string mark)
            {
                return box1.Tag?.ToString() == mark &&
                       box2.Tag?.ToString() == mark &&
                       box3.Tag?.ToString() == mark;
            }


            Image playerMark = Properties.Resources.X_Logo;
            Image cpuMark = Properties.Resources.O;

            bool playerWins = IsWinningMove(topLeftBox, topMiddleBox, topRightBox, "X") ||
                  IsWinningMove(middleLeftBox, middleBox, middleRightBox, "X") ||
                  IsWinningMove(bottomLeftBox, bottomMiddleBox, bottomRightBox, "X") ||
                  IsWinningMove(topLeftBox, middleLeftBox, bottomLeftBox, "X") ||
                  IsWinningMove(topMiddleBox, middleBox, bottomMiddleBox, "X") ||
                  IsWinningMove(topRightBox, middleRightBox, bottomRightBox, "X") ||
                  IsWinningMove(topLeftBox, middleBox, bottomRightBox, "X") ||
                  IsWinningMove(topRightBox, middleBox, bottomLeftBox, "X");

            bool cpuWins = IsWinningMove(topLeftBox, topMiddleBox, topRightBox, "O") ||
                           IsWinningMove(middleLeftBox, middleBox, middleRightBox, "O") ||
                           IsWinningMove(bottomLeftBox, bottomMiddleBox, bottomRightBox, "O") ||
                           IsWinningMove(topLeftBox, middleLeftBox, bottomLeftBox, "O") ||
                           IsWinningMove(topMiddleBox, middleBox, bottomMiddleBox, "O") ||
                           IsWinningMove(topRightBox, middleRightBox, bottomRightBox, "O") ||
                           IsWinningMove(topLeftBox, middleBox, bottomRightBox, "O") ||
                           IsWinningMove(topRightBox, middleBox, bottomLeftBox, "O");


            if (playerWins)
            {
                MessageBox.Show("Player wins!");
                ResetGame();
                return;
            }

            if (cpuWins)
            {
                MessageBox.Show("CPU wins!");
                ResetGame();
                return;
            }

            bool allFilled = places.All(place => place.filled);

            if (allFilled)
            {
                MessageBox.Show("It's a draw!");
                ResetGame();
            }
        }


        private void ResetGame()
        {
            topLeftBox.Tag = topMiddleBox.Tag = topRightBox.Tag =
            middleLeftBox.Tag = middleBox.Tag = middleRightBox.Tag =
            bottomLeftBox.Tag = bottomMiddleBox.Tag = bottomRightBox.Tag = null;

            topLeftBox.Image = topMiddleBox.Image = topRightBox.Image =
            middleLeftBox.Image = middleBox.Image = middleRightBox.Image =
            bottomLeftBox.Image = bottomMiddleBox.Image = bottomRightBox.Image = null;

            foreach (var place in places)
            {
                place.filled = false;
            }

            playerTurn = true;
            cpuTurn = false;
            rounds = 0;
        }

    }
    public class Filled
    {
        public string Name { get; set; }
        public bool filled { get; set; }

        public Filled(string name)
        {
            Name = name;
            filled = false;
        }
    }
}
